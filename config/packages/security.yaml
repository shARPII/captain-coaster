security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        login_link_provider:
            entity:
                class: 'App\Entity\User'
                property: 'email'
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_home:
            pattern: ^/api$
            security: false

        api_secured:
            custom_authenticators:
                - App\Security\ApiKeyAuthenticator
            stateless: true
            pattern: '^/api/'

        main:
            lazy: true
#            login_link:
#                check_route: login_check
#                #check_post_only: true
#                signature_properties: ['id', 'email']
#                provider: login_link_provider
#                lifetime: 300
#                max_uses: 1
#                login_path: login
            custom_authenticators:
                - App\Security\GoogleAuthenticator
                - App\Security\FacebookAuthenticator
                - App\Security\CaptainAuthenticator
            entry_point: App\Security\GoogleAuthenticator
            logout:
                path: logout
            remember_me:
                name: captain_rmb
                secret: '%kernel.secret%'
                lifetime: 2629800 # 1 month in seconds
                always_remember_me: true
                signature_properties: ['email', 'updatedAt']
                secure: true
                httponly: true

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_CONTRIBUTOR, ROLE_PREVIEW_FEATURE]
        ROLE_SUPER_ADMIN: ROLE_ADMIN
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/team, roles: ROLE_CONTRIBUTOR }
        - { path: ^/api, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
